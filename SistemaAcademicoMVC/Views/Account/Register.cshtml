@model SistemaAcademicoMVC.Models.Docente

<h2>Registro de Docente</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "register-form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.Nombre)
        @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", id = "Nombre" })
        @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Correo)
        @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", id = "Correo" })
        @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <button type="submit" class="btn btn-success">Registrar</button>
}

<script>
// Validación frontend, AJAX, localStorage y spinner solo si todo es válido
document.getElementById('register-form').onsubmit = function(e) {
    e.preventDefault();
    var nombre = document.getElementById('Nombre').value.trim();
    var correo = document.getElementById('Correo').value.trim();
    var password = document.getElementById('Password').value.trim();
    var errors = [];
    if (!nombre) errors.push("El nombre es obligatorio.");
    if (!correo) {
        errors.push("El correo es obligatorio.");
    } else if (!new RegExp("^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$").test(correo)) {
        errors.push("Formato de correo inválido.");
    }
    if (!password) errors.push("La contraseña es obligatoria.");
    // Solo muestra spinner si NO hay errores
    if (errors.length > 0) {
        alert(errors.join('\n'));
        return;
    } else {
        var spinner = document.getElementById('loading-spinner');
        if (spinner) spinner.style.display = 'block';
    }
    localStorage.setItem('docenteRegistro', JSON.stringify({ nombre, correo }));
    fetch('@Url.Action("Register", "Account")', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `Nombre=${encodeURIComponent(nombre)}&Correo=${encodeURIComponent(correo)}&Password=${encodeURIComponent(password)}&__RequestVerificationToken=${document.querySelector('input[name="__RequestVerificationToken"]').value}`
    })
    .then(resp => resp.text())
    .then(data => {
        alert('¡Registro exitoso!'); // mensaje éxito
        setTimeout(() => window.location.href = '/Account/Login', 1000); // redirige
        localStorage.removeItem('docenteRegistro');
        if (spinner) spinner.style.display = 'none';
    })
    .catch(() => {
        if (spinner) spinner.style.display = 'none';
        alert('Error en el registro');
    });
};
</script>